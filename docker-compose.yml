version: "3"

networks:
  default:
    driver: bridge

services:

  nginx:
    image: fs_nginx_proxy:latest
    container_name: fs_nginx_proxy
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile-proxy
    depends_on:
      - service
    ports:
      - "${EXTERNAL_PORT}:80"
    networks:
      - default
    restart: always

  service:
    image: fs_service:${APP_VERSION}
    container_name: fs_service
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile-service
    depends_on:
      - posgreesql
      - redis
      - s3
    expose:
      - ${INTERNAL_PORT}
    environment:
      APP_VERSION: ${APP_VERSION}
      INTERNAL_PORT: ${INTERNAL_PORT}
      PROJECT_NAME: ${PROJECT_NAME}
      DATABASE_DSN: ${DATABASE_DSN}
      PROJECT_HOST: ${PROJECT_HOST}
      PROJECT_PORT: ${PROJECT_PORT}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      REDIS_DSN: ${REDIS_DSN}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      S3_SERVICE_NAME: ${S3_SERVICE_NAME}
      S3_REGION_NAME: ${S3_REGION_NAME}
      S3_USE_SSL: ${S3_USE_SSL}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      S3_AWS_ACCESS_KEY_ID: ${S3_AWS_ACCESS_KEY_ID}
      S3_AWS_SECRET_ACCESS_KEY: ${S3_AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
    networks:
      - default
    restart: always

  posgreesql:
    container_name: fs_posgreesql
    image: postgres:14
    expose:
      - ${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - default
    restart: always

  redis:
    container_name: fs_redis
    image: redis:latest
    expose:
      - ${REDIS_PORT}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - default
    restart: always

  s3:
    container_name: fs_s3
    image: scality/s3server
    expose:
      - ${S3_PORT}
    environment:
      - AWS_ACCESS_KEY_ID=${S3_AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${S3_AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${S3_REGION_NAME}
    networks:
      - default
    restart: always
